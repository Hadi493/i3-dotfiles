# https://stackoverflow.com/questions/16415617/how-to-use-scintilla-for-unicode-strings
code.page=65001

wrap=1
output.wrap=1

ccc=./build.sh
lexer.cpp.track.preprocessor=0

if PLAT_GTK
	font.base=font:Iosevka,size:24
	font.small=font:Iosevka,size:22
	font.comment=font:Iosevka,size:24
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=$(font.base)
	font.text.comment=$(font.comment)
	font.embedded.base=$(font.base)
	font.embedded.comment=$(font.comment)
	font.monospaces=$(font.base)
	font.vbs=$(font.base)

line.margin.visible=1
autocompleteword.automatic=1

# Indentation
tabsize=4
indent.size=4
use.tabs=0
indent.auto=1
indent.automatic=1
indent.opening=0
indent.closing=0
#tab.indents=0
#backspace.unindents=0

#~ # Misc colours
fold.margin.colour=#303030
fold.margin.highlight.colour=#303030
#~ whitespace.fore=#508050
selection.back=#00000066
selection.additional.back=#00000066
selection.secondary.back=#00000066
selection.inactive.back=#00000066
caret.fore=#e4e4ef
#~ # Additional caret and selection settings
selection.alpha=50
#~ caret.line.back=#E8E8FF
#~ caret.line.back.alpha=90

#~ # Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#A38D66
colour.code.comment.line=fore:#A38D66
colour.code.comment.doc=fore:#A38D66
colour.text.comment=fore:#A38D66
colour.other.comment=fore:#A38D66
#~ colour.embedded.comment=back:#E0EEFF
#~ colour.embedded.js=back:#F0F0FF
#~ colour.notused=back:#FF0000
colour.number=fore:#9e95c7
colour.keyword=fore:#E5A4CB
colour.keyword2=fore:#9e95c7
colour.keyword3=fore:#7788DD
colour.string=fore:#8AC926
colour.char=fore:#8AC926
colour.operator=fore:#F0E0B0
#~ colour.preproc=fore:#708B75
colour.preproc=fore:#829B87
#~ colour.preproc=fore:#CCFFCC
#~ colour.error=fore:#FFFF00,back:#A05050

#~ # Global default styles for all languages
#~ # Default
style.*.32=$(font.base),back:#2A2343,fore:#FFFFF2
#~ # Line number
style.*.33=$(font.base),back:#2A2343,fore:#FFFFF2
#~ # Brace highlight
style.*.34=fore:#FFFFEE,bold
#~ # Brace incomplete highlight
#~ style.*.35=fore:#FF0000,bold
#~ # Control characters
#~ style.*.36=
# Indentation guides
style.*.37=fore:#507050

# Lua Styles
style.lua.32=$(font.base),back:#2A2343,fore:#FFFFF2

style.lua.13=$(style.lua.5)
style.lua.14=$(style.lua.5)
style.lua.15=$(style.lua.5)
style.lua.16=$(style.lua.5)
style.lua.17=$(style.lua.5)
style.lua.18=$(style.lua.5)
style.lua.19=$(style.lua.5)

#~ # Comment italique
# style.*.1=$(colour.code.comment.box),$(font.code.comment.box),italics
# style.*.2=$(colour.code.comment.line),$(font.code.comment.line),italics
# style.*.3=$(colour.code.comment.doc),$(font.code.comment.doc),italics

#~ # White space
#~ style.*.0=fore:#808080
#~ # Number
#~ style.*.4=$(colour.number)

#~ # Keyword
#~ style.cpp.5=$(colour.keyword),bold

#~ # Double quoted string
#~ style.*.6=$(colour.string)
#~ # Single quoted string
#~ style.*.7=$(colour.char)
#~ # UUIDs (only in IDL)
#~ style.*.8=fore:#7F7F00
#~ # Preprocessor
#~ style.*.9=$(colour.preproc)
#~ # Operators
#~ style.*.10=$(colour.operator)

#~ # Identifiers
#~ style.*.11=
#~ # End of line where string is not closed
#~ style.*.12=$(colour.string),back:#5A5050,eolfilled
#~ # Verbatim strings for C#
#~ style.*.13=$(colour.string),back:#5A5050,eolfilled
#~ # Regular expressions for JavaScript
#~ style.*.14=$(colour.string),back:#5A5050,eolfilled
#~ # Doc Comment Line
#~ style.*.15=$(colour.code.comment.doc),$(font.code.comment.doc)
#~ # Keywords2
#~ style.*.16=$(colour.keyword2)
#~ # Comment keyword
#~ style.*.17=fore:#3060A0,$(font.code.comment.doc)
#~ # Comment keyword error
#~ style.*.18=fore:#804020,$(font.code.comment.doc)
#~ # Braces are only matched in operator style
#~ braces.*.style=10

#~ # Makefile styles
#~ # Default
#~ style.makefile.0=$(font.base)
#~ # Comment: #
#~ style.makefile.1=$(colour.code.comment.box),$(font.comment),italics
#~ comment.block.makefile=#~
#~ # Pre-processor or other comment: !
#~ style.makefile.2=$(colour.preproc)
#~ # Variable: $(x)
#~ style.makefile.3=fore:#9F9F20
#~ # Operator
#~ style.makefile.4=$(colour.operator)
#~ # Target
#~ style.makefile.5=$(colour.preproc)
#~ # Error
#~ style.makefile.9=$(colour.error),eolfilled
#~ # Matched Operators
#~ style.makefile.34=fore:#FF6030,bold
#~ style.makefile.35=fore:#FF0000,bold

#~ # Batch styles
#~ # Default
#~ style.batch.0=$(font.base)
#~ # Comment (rem or ::)
#~ style.batch.1=$(colour.code.comment.box),$(font.comment),italics
#~ # Keywords
#~ style.batch.2=$(colour.keyword),bold
#~ # Label (line beginning with ':')
#~ style.batch.3=$(colour.preproc),back:#494949,eolfilled
#~ # Hide command character ('@')
#~ style.batch.4=$(colour.preproc)
#~ # External commands
#~ style.batch.5=fore:#007090,$(font.monospace),bold
#~ # Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
#~ style.batch.6=$(font.base)
#~ # Operator: * ? < > |
#~ style.batch.7=$(colour.operator)

#~ # Bash styles
#~ # Default
#~ style.bash.32=$(font.base)
#~ # White space
#~ style.bash.0=fore:#808080,$(font.base)
#~ # Error
#~ style.bash.1=$(colour.error)
#~ # Comment
#~ style.bash.2=$(colour.code.comment.box),$(font.comment),italics
#~ # Number
#~ style.bash.3=$(colour.number)
#~ # Keyword
#~ style.bash.4=$(colour.keyword),bold
#~ # Double quoted string
#~ style.bash.5=$(colour.string),$(font.monospace)
#~ # Single quoted string
#~ style.bash.6=$(colour.char),$(font.monospace)
#~ # Operators
#~ style.bash.7=$(colour.operator),bold
#~ # Identifiers (functions, etc.)
#~ style.bash.8=$(font.base)
#~ # Scalars: $var
#~ style.bash.9=fore:#000000,back:#FFE0E0
#~ # Parameter expansion: ${var}
#~ style.bash.10=fore:#000000,back:#FFFFE0
#~ # Back Ticks
#~ style.bash.11=fore:#FFFF00,back:#A08080
#~ # Here-doc (delimiter)
#~ style.bash.12=fore:#000000,back:#DDD0DD
#~ # Here-doc (single quoted, q)
#~ style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
#~ # Braces are only matched in operator style
#~ braces.bash.style=7

#~ # PHP
#~ # Default
#~ style.hypertext.118=$(font.base)
#~ # Matching braces
#~ style.hypertext.34=$(font.base)
#~ # Not maching braces
#~ style.hypertext.35=$(coulour.error)
#~ # Double quoted String
#~ style.hypertext.119=$(colour.string)
#~ # Single quoted string
#~ style.hypertext.120=$(colour.char)
#~ # Keyword
#~ style.hypertext.121=$(colour.keyword)
#~ # Number
#~ style.hypertext.122=$(colour.number)
#~ # Variable
#~ style.hypertext.123=$(colour.keyword2)
#~ # Comment
#~ style.hypertext.124=$(colour.code.comment.box)
#~ # One line comment
#~ style.hypertext.125=$(colour.code.comment.box)
#~ # PHP variable in double quoted string
#~ style.hypertext.126=$(colour.other)
#~ # PHP operator
#~ style.hypertext.127=$(font.base)

#~ # Text
#~ style.hypertext.0=$(font.base)
#~ # Tags
#~ style.hypertext.1=$(colour.keyword3)
#~ # Unknown Tags
#~ style.hypertext.2=fore:#FF0000
#~ # Attributes
#~ style.hypertext.3=fore:#008080
#~ # Unknown Attributes
#~ style.hypertext.4=fore:#FF0000

#~ # output window
#~ style.errorlist.32=$(font.small),back:#000000
style.errorlist.0=fore:#FFFFFF
style.errorlist.2=fore:#0FFFFF
style.errorlist.4=fore:#9999AA

#~ user.shortcuts=\
#~ Ctrl+N|2300|\
#~ Ctrl+P|2302|\
#~ Ctrl+B|2304|\
#~ Ctrl+F|2306|\
#~ Ctrl+Shift+F|2310|\
#~ Ctrl+Shift+B|2309|